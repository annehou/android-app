
《围住神经猫》

主要算法：
在9*9的网格中，有一只猫和随机生成的障碍点，通过点击设置障碍，把神经猫围住，此时游戏胜利。

1、每个点独立为一个类Dot
Dot{
private int x,y; //x代表行，y代表列(和坐标轴不重合),这样无需进行坐标变换
private int status; //每个点的状态（有路障，无路障，有神经猫）
...
}

2、有一个游戏视图类GameView继承SurfaceView实现OnTouchListener接口
定义一个二维数组Dot[9][9]
初始化神经猫的位置为Dot[4][4]
其余的数组元素初始化为有路障和无路障的点

如果神经猫不在边界，则点击无障碍的点，神经猫可能的走向有6个，
这6个可能的方向有一下一些情况：
1、有障碍，无法通过
2、无障碍，可以到达边界
3、无障碍，但是不能到达边界
首先排除第1种情况
然后找到第2、3中情况的邻接点，
记录第2种情况下，猫可走的步数，如果存在，则找出距离最短的点做为下一步
如果第2种情况不存在，记录第3种情况下，猫可走的步数，如果存在，则找出距离最长的点作为下一步
之后跟新神经猫的位置，重绘

循环进行，直到游戏失败，或者成功

