package org.annie.g2048;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.graphics.Point;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.widget.GridLayout;
 

public class GameView extends GridLayout {
	
	private Card[][] cards = new Card[4][4];
	private List<Point> emptyPoints = new ArrayList<Point>();
	private int cardWidth = 0;

	public GameView(Context context){
		super(context);
		init();
	}
	public GameView(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
		init();
	}
	/**
	 * 初始化
	 */
	private void init(){
		//识别手势(监听触摸屏事件)
		setOnTouchListener(new OnTouchListener() {
			//手指按下的点(startX,startY),手指移动的距离offsetX,offsetY
			private float startX,startY,offsetX,offsetY;
			@Override
			public boolean onTouch(View v, MotionEvent event) {	
				switch(event.getAction()){
				//手指按下的坐标
				case MotionEvent.ACTION_DOWN:
					startX = event.getX();
					startY = event.getY();
					break;
				//手指松开
				case MotionEvent.ACTION_UP:
					//x方向移动的距离
					offsetX = event.getX() - startX;
					//y方向移动的距离
					offsetY = event.getY() - startY;
					
					//判断手指在x轴方向移动
					if(Math.abs(offsetX) > Math.abs(offsetY)){
						if(offsetX < -5){
							//手指向左滑动
							swipeLeft();
						}else if(offsetX > 5){
							//手指向右滑动
							swipeRight();
						}
					}else{
						//手指在y轴上移动
						if(offsetY < -5){
							//手指向上移动
							swipeUp();
						}else if(offsetY > 5){
							//手指向下移动
							swipeDown();
						}
					}
					
					break;
					
				}
				//必须为true,表示已经处理了触摸事件
				return true;
			}
		});
	}
	private void swipeDown() {
		System.out.println("down");
		
	}
	private void swipeUp() {
		System.out.println("up");
		
	}
	private void swipeRight() {
		System.out.println("right");
		
	}
	private void swipeLeft() {
		System.out.println("left");
		
	}
	/**
	 * 当屏幕大小发生改变时，调用onSizeChanged方法
	 */
	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) {
		super.onSizeChanged(w, h, oldw, oldh);
		
		//每张卡片的宽度（取高、宽较小的均分为四份）
		cardWidth = (Math.min(w, h)-10)/4;
		//卡片的高度等于宽度
		addCards(cardWidth, cardWidth);
		//启动游戏
		startGame();
	}
	private void addCards(int cardWidth,int cardHeight){
		Card c;
		for(int i=0;i<4;i++){
			for(int j=0;j<4;j++){
				c = new Card(getContext());
				addView(c, cardWidth, cardHeight);
				cards[i][j] = c;			
			}
		}
	}
	
	private void startGame(){
		
		for(int i=0;i<4;i++){
			for(int j=0;j<4;j++){
				cards[i][j].setNum(0);
			}
		}
		
		addRandomNum();
		addRandomNum();
	}
	
	/**
	 * 为卡片添加初始化的随机数字
	 */
	private void addRandomNum(){
		
		emptyPoints.clear();
		
		for(int i=0;i<4;i++){
			for(int j=0;j<4;j++){
				if(cards[i][j].getNum() <= 0){
					emptyPoints.add(new Point(i,j));
				}
			}
		}
		
		Point p = emptyPoints.remove((int)(Math.random()*emptyPoints.size()));
		cards[p.x][p.y].setNum(Math.random()>0.1?2:4);
	}
}
